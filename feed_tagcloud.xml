<?xml version="1.0" encoding="utf-8" ?>
<Module>
  <ModulePrefs
     title="__MSG_gadget_title__"
     description="__MSG_gadget_description__"
     author="Hirotaka Ogawa"
     author_email="hirotaka.ogawa@gmail.com"
     author_link="http://blog.as-is.net/"
     >
    <Locale messages="{{ locale_url }}/ALL_ALL.xml" />
    <Locale lang="ja" messages="{{ locale_url }}/ja_ALL.xml" />
  </ModulePrefs>
  <UserPref
     name="feed_url"
     datatype="string"
     display_name="__MSG_feed_url__"
     required="true"
     {% if default_feed_url %}default_value="{{ default_feed_url }}"{% endif %}
     />
  <UserPref
     name="base_url"
     datatype="string"
     display_name="__MSG_base_url__"
     required="true"
     {% if default_base_url %}default_value="{{ default_base_url }}"{% endif %}
     />
  <UserPref
     name="order_by"
     datatype="enum"
     display_name="__MSG_order_by__"
     default_value="Tag name">
    <EnumValue value="Tag name" display_value="__MSG_tag_name__"/>
    <EnumValue value="Count" display_value="__MSG_count__"/>
  </UserPref>
  <UserPref
     name="algorithm"
     datatype="enum"
     display_name="__MSG_algorithm__"
     default_value="Linear">
    <EnumValue value="Linear" display_value="__MSG_linear__"/>
    <EnumValue value="Logarithmic" display_value="__MSG_logarithmic__"/>
  </UserPref>
  <UserPref
     name="link_color"
     datatype="string"
     display_name="__MSG_link_color__"
     default_value="{% if default_link_color %}{{ default_link_color }}{% else %}#336699{% endif %}"
     />
  <UserPref
     name="background_color"
     datatype="string"
     display_name="__MSG_background_color__"
     default_value="{% if default_background_color %}{{ default_background_color }}{% else %}#FFFFFF{% endif %}"
     />
  <UserPref
     name="min_font_size"
     datatype="string"
     display_name="__MSG_min_font_size__"
     default_value="{% if default_min_font_size %}{{ default_min_font_size }}{% else %}8{% endif %}"
     />
  <UserPref
     name="max_font_size"
     datatype="string"
     display_name="__MSG_max_font_size__"
     default_value="{% if default_max_font_size %}{{ default_max_font_size }}{% else %}24{% endif %}"
     />
  <Content type="html">
  <![CDATA[
    <style type="text/css">
      #content {
        font-size: small;
        background-color: __UP_background_color__;
        margin: 0;
        padding: .5em;
        text-align: justify;
      }
      a:link, a:visited {
        color: __UP_link_color__;
      }
    </style>
    <div id="content">Loading...</div>
    <script type="text/javascript">
      var prefs = new gadgets.Prefs();
      var feed_tagcloud_url = "{{ json_url }}?url=";

      function makeJSONRequest() {
        var params = {};
        params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
        var url = feed_tagcloud_url + encodeURIComponent(prefs.getString("feed_url"));
        gadgets.io.makeRequest(url, response, params);
      };

      function response(obj) {
        var base_url      = prefs.getString("base_url");
        var min_font_size = Number(prefs.getString("min_font_size"));
        var max_font_size = Number(prefs.getString("max_font_size"));
        var order_by      = prefs.getString("order_by");
        var algorithm     = prefs.getString("algorithm");

        var tag_alist = obj.data;
        var tags = [];
        var min = 10000;
        var max = 0;
        for (var tag in tag_alist) {
          var count = tag_alist[tag];
          min = (count < min) ? count : min;
          max = (count > max) ? count : max;
          tags.push({ 'tag': tag, 'count': count });
        }

        if (order_by == 'Tag name') {
          tags.sort(function (a, b) {
            return a.tag.localeCompare(b.tag);
          });
        } else {
          tags.sort(function (a, b) {
            return Number(b.count) - Number(a.count);
          });
        }

	var weight_func;
	if (algorithm == 'Linear') {
	  weight_func = function (count) {
	    return (count - min) / (max - min);
	  };
	} else {
	  weight_func = function (count) {
	    return (Math.log(count) - Math.log(min)) / (Math.log(max) - Math.log(min));
	  };
	}

        var html = '';
        for (var i = 0; i < tags.length; i++) {
          var tag = tags[i]['tag'];
          var count = tags[i]['count'];
          var font_size = weight_func(count) * (max_font_size - min_font_size) + min_font_size;
          var title = (count < 2) ? count + ' item' : count + ' items';

          var str = '<a target="_top" href="%(url)" title="%(title)" rel="tag" style="font-size: %(font_size)pt">%(tag)</a> ';
          str = str.replace('%(url)', base_url + encodeURIComponent(tag));
          str = str.replace('%(title)', title);
          str = str.replace('%(font_size)', font_size);
          str = str.replace('%(tag)', tag);
          html += str;
        }
        document.getElementById('content').innerHTML = html;
      };

      gadgets.util.registerOnLoadHandler(makeJSONRequest);
    </script>
  ]]>
  </Content>
</Module>
